/*===============================================================================
Copyright (c) 2016 PTC Inc. All Rights Reserved.

Copyright (c) 2012-2014 Qualcomm Connected Experiences, Inc. All Rights Reserved.

Vuforia is a trademark of PTC Inc., registered in the United States and other 
countries.
===============================================================================*/

package com.vuforia.samples.VuforiaSamples.app.PostItNote;

import com.vuforia.samples.SampleApplication.utils.MeshObject;

import java.nio.Buffer;


public class Fumetto extends MeshObject
{
    // Data for drawing the 3D plane as overlay
    private static final double letterVertices[] = {
            //Fumetto italiano:
            -0.501964, 1.268713, 0.050000,
            -1.168631, 1.268713, -0.050000,
            -0.501964, 1.268713, -0.050000,
            -0.501965, 2.868713, 0.050000,
            -1.168630, 2.868713, -0.050000,
            -1.168631, 2.868713, 0.050000,
            -1.168631, 2.868713, 0.050000,
            -1.168631, 1.268713, -0.050000,
            -1.168631, 1.268713, 0.050000,
            0.164703, 2.868713, -0.050000,
            0.831369, 1.268713, -0.050000,
            0.164703, 1.265490, -0.050000,
            0.831369, 1.268713, 0.050000,
            0.831369, 2.868713, -0.050000,
            0.831369, 2.868713, 0.050000,
            -1.168630, 2.868713, -0.050000,
            -0.501964, 1.268713, -0.050000,
            -1.168631, 1.268713, -0.050000,
            0.831369, 2.868713, 0.050000,
            0.164703, 2.868713, -0.050000,
            0.164702, 2.868713, 0.050000,
            -0.501964, 2.868713, -0.050000,
            1.835298, 2.868713, 0.050000,
            2.501965, 2.868713, -0.050000,
            1.835298, 2.868713, -0.050000,
            0.164702, 1.265490, 0.050000,
            -0.501964, 1.268713, -0.050000,
            0.164703, 1.265490, -0.050000,
            1.000000, 0.907034, 0.050000,
            0.164703, 1.265490, -0.050000,
            1.000000, 0.907034, -0.050000,
            1.000000, 0.907034, -0.050000,
            0.831369, 1.268713, -0.050000,
            1.000000, 0.907034, 0.050000,
            1.000000, 0.907034, -0.050000,
            1.835297, 1.265490, 0.050000,
            1.000000, 0.907034, -0.050000,
            1.835297, 1.265490, -0.050000,
            2.501965, 2.868713, 0.050000,
            3.168631, 2.868713, -0.050000,
            1.835297, 1.265490, 0.050000,
            2.501964, 1.268713, -0.050000,
            2.501964, 1.268713, 0.050000,
            2.501965, 2.868713, -0.050000,
            3.168631, 1.268713, -0.050000,
            2.501964, 1.268713, -0.050000,
            1.168631, 1.268713, -0.050000,
            1.835298, 2.868713, -0.050000,
            1.835297, 1.265490, -0.050000,
            1.000000, 0.907034, -0.050000,
            1.168631, 1.268713, 0.050000,
            1.000000, 0.907034, -0.050000,
            1.000000, 0.907034, 0.050000,
            1.168631, 2.868713, 0.050000,
            1.168631, 1.268713, -0.050000,
            1.168631, 1.268713, 0.050000,
            2.501964, 1.268713, 0.050000,
            3.168631, 1.268713, -0.050000,
            3.168631, 1.268713, 0.050000,
            1.168631, 2.868713, 0.050000,
            1.168631, 2.868713, -0.050000,
            3.168631, 1.268713, 0.050000,
            3.168631, 2.868713, -0.050000,
            3.168631, 2.868713, 0.050000,
            1.000000, 0.907034, 0.050000,
            0.831369, 1.268713, 0.050000,
            0.164702, 1.265490, 0.050000,
            0.164702, 2.868713, 0.050000,
            -0.501964, 1.268713, 0.050000,
            -0.501965, 2.868713, 0.050000,
            -1.168631, 1.268713, 0.050000,
            -1.168631, 2.868713, 0.050000,
            1.000000, 0.907034, 0.050000,
            1.835297, 1.265490, 0.050000,
            1.168631, 1.268713, 0.050000,
            1.835298, 2.868713, 0.050000,
            1.168631, 2.868713, 0.050000,
            2.501964, 1.268713, 0.050000,
            2.501965, 2.868713, 0.050000,
            3.168631, 1.268713, 0.050000,
            3.168631, 2.868713, 0.050000,
            -1.168631, 1.268713, 0.050000,
            -1.168631, 2.868713, 0.050000,
            -1.168630, 2.868713, -0.050000,
            -1.168631, 1.268713, -0.050000,
            0.831369, 2.868713, -0.050000,
            0.831369, 1.268713, 0.050000,
            0.831369, 1.268713, -0.050000,
            0.831369, 2.868713, -0.050000,
            -0.501964, 2.868713, -0.050000,
            0.831369, 2.868713, -0.050000,
            -0.501964, 1.268713, 0.050000,
            0.164702, 1.265490, 0.050000,
            0.831369, 1.268713, -0.050000,
            0.831369, 1.268713, 0.050000,
            1.000000, 0.907034, 0.050000,
            1.835297, 1.265490, 0.050000,
            1.000000, 0.907034, 0.050000,
            1.000000, 0.907034, -0.050000,
            3.168631, 2.868713, 0.050000,
            1.835297, 1.265490, -0.050000,
            3.168631, 2.868713, -0.050000,
            1.168631, 2.868713, -0.050000,
            1.168631, 1.268713, 0.050000,
            1.168631, 1.268713, -0.050000,
            1.000000, 0.907034, -0.050000,
            1.168631, 2.868713, -0.050000,
            2.501964, 1.268713, -0.050000,
            3.168631, 1.268713, -0.050000,
            0.831369, 2.868713, 0.050000
    };

    private static final double letterNormals[] = {
            0.000000, -1.000000, 0.000000,
            0.000000, -1.000000, 0.000000,
            0.000000, -1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            -1.000000, -0.000000, -0.000005,
            -1.000000, -0.000000, -0.000005,
            -1.000000, -0.000000, -0.000005,
            -0.000000, -0.000000, -1.000000,
            -0.000000, -0.000000, -1.000000,
            -0.000000, -0.000000, -1.000000,
            1.000000, 0.000000, 0.000005,
            1.000000, 0.000000, 0.000005,
            1.000000, 0.000000, 0.000005,
            -0.000000, 0.000000, -1.000000,
            -0.000000, 0.000000, -1.000000,
            -0.000000, 0.000000, -1.000000,
            -0.000000, 1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            -0.000000, 1.000000, 0.000000,
            0.000000, 1.000000, -0.000000,
            0.000000, 1.000000, -0.000000,
            0.000000, 1.000000, -0.000000,
            -0.004834, -0.999988, -0.000000,
            -0.004834, -0.999988, -0.000000,
            -0.004834, -0.999988, -0.000000,
            -0.394357, -0.918957, -0.000001,
            -0.394357, -0.918957, -0.000001,
            -0.394357, -0.918957, -0.000001,
            -0.000000, 0.000000, -1.000000,
            0.906330, 0.422571, 0.000002,
            0.906330, 0.422571, 0.000002,
            0.906330, 0.422571, 0.000002,
            0.394357, -0.918957, 0.000000,
            0.394357, -0.918957, 0.000000,
            0.394357, -0.918957, 0.000000,
            0.000000, 1.000000, 0.000000,
            0.000000, 1.000000, 0.000000,
            0.004834, -0.999988, 0.000000,
            0.004834, -0.999988, 0.000000,
            0.004834, -0.999988, 0.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            -0.906330, 0.422571, -0.000002,
            -0.906330, 0.422571, -0.000002,
            -0.906330, 0.422571, -0.000002,
            -1.000000, 0.000000, 0.000000,
            -1.000000, 0.000000, 0.000000,
            -1.000000, 0.000000, 0.000000,
            -0.000000, -1.000000, -0.000000,
            -0.000000, -1.000000, -0.000000,
            -0.000000, -1.000000, -0.000000,
            0.000000, 1.000000, -0.000000,
            0.000000, 1.000000, -0.000000,
            1.000000, -0.000000, 0.000000,
            1.000000, -0.000000, 0.000000,
            1.000000, -0.000000, 0.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, -0.000000, 1.000000,
            0.000000, 0.000000, 1.000000,
            0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            -0.000000, 0.000000, 1.000000,
            0.000000, -1.000000, 0.000000,
            -1.000000, 0.000000, -0.000010,
            -1.000000, 0.000000, -0.000010,
            -1.000000, 0.000000, -0.000010,
            -0.000000, -0.000000, -1.000000,
            1.000000, 0.000000, 0.000004,
            1.000000, 0.000000, 0.000004,
            1.000000, 0.000000, 0.000004,
            -0.000000, 0.000000, -1.000000,
            -0.000000, 1.000000, -0.000000,
            -0.004834, -0.999988, -0.000000,
            -0.394357, -0.918957, -0.000001,
            0.906330, 0.422571, 0.000003,
            0.906330, 0.422571, 0.000003,
            0.906330, 0.422571, 0.000003,
            0.394357, -0.918957, 0.000001,
            0.394357, -0.918957, 0.000001,
            0.394357, -0.918957, 0.000001,
            0.000000, 1.000000, -0.000000,
            0.004834, -0.999988, 0.000000,
            0.000000, -0.000000, -1.000000,
            0.000000, -0.000000, -1.000000,
            -0.906330, 0.422571, 0.000000,
            -0.906330, 0.422571, 0.000000,
            -0.906330, 0.422571, 0.000000,
            -1.000000, 0.000000, 0.000000,
            -0.000000, -1.000000, 0.000000,
            1.00000, -0.000000, 0.000000,
            0.000000, -0.000000, 1.000000
    };

    private static final double letterTexcoords[] = {
            0.444534, 0.121451,
            0.434507, 0.119946,
            0.444534, 0.119946,
            0.464013, 0.085821,
            0.465517, 0.095848,
            0.464013, 0.095848,
            0.464013, 0.095848,
            0.465517, 0.119915,
            0.464013, 0.119915,
            0.713726, 0.993543,
            0.570579, -0.000784,
            0.713730, -0.002783,
            0.464013, 0.041699,
            0.465517, 0.065765,
            0.464013, 0.065765,
            1.000028, 0.993551,
            0.856881, -0.000776,
            1.000032, -0.000771,
            0.464013, 0.065765,
            0.465517, 0.075793,
            0.464013, 0.075793,
            0.465517, 0.085821,
            0.535152, 0.065203,
            0.545179, 0.066707,
            0.535152, 0.066707,
            0.454562, 0.121451,
            0.444534, 0.119946,
            0.454562, 0.119946,
            0.468234, 0.121451,
            0.454562, 0.119946,
            0.468234, 0.119946,
            0.521564, 0.044965,
            0.465517, 0.041699,
            0.464013, 0.035696,
            0.465517, 0.035696,
            0.481938, 0.121451,
            0.468266, 0.119946,
            0.481938, 0.119946,
            0.545179, 0.065203,
            0.555207, 0.066707,
            0.481938, 0.121451,
            0.491966, 0.119946,
            0.491966, 0.121451,
            0.141132, 1.000441,
            -0.000852, 0.005202,
            0.141132, 0.005203,
            0.425099, 0.005204,
            0.283115, 1.000441,
            0.283116, 0.003199,
            0.493121, 0.044252,
            0.501058, 0.065203,
            0.495055, 0.066707,
            0.495055, 0.065203,
            0.525124, 0.065203,
            0.501058, 0.066707,
            0.501058, 0.065203,
            0.491966, 0.121451,
            0.501993, 0.119946,
            0.501993, 0.121451,
            0.525124, 0.065203,
            0.525124, 0.066707,
            0.579274, 0.065203,
            0.555207, 0.066707,
            0.555207, 0.065203,
            0.498183, 0.041631,
            0.443485, -0.000693,
            0.295990, -0.002700,
            0.295985, 0.993394,
            0.148494, -0.000702,
            0.148490, 0.993390,
            0.000999, -0.000706,
            0.000995, 0.993385,
            0.518155, 0.042319,
            0.710193, -0.004599,
            0.564934, -0.002588,
            0.710193, 0.996265,
            0.564933, 0.996265,
            0.855453, -0.002587,
            0.855453, 0.996266,
            1.000713, -0.002587,
            1.000713, 0.996266,
            0.434507, 0.121451,
            0.464013, 0.095848,
            0.465517, 0.095848,
            0.465517, 0.119915,
            0.570576, 0.993538,
            0.464013, 0.041699,
            0.465517, 0.041699,
            0.465517, 0.065765,
            0.856878, 0.993547,
            0.465517, 0.065765,
            0.444534, 0.121451,
            0.454562, 0.121451,
            0.465517, 0.041699,
            0.464013, 0.041699,
            0.464013, 0.035696,
            0.481938, 0.121451,
            0.468266, 0.121451,
            0.468266, 0.119946,
            0.555207, 0.065203,
            0.481938, 0.119946,
            -0.000852, 1.000440,
            0.425099, 1.000442,
            0.501058, 0.065203,
            0.501058, 0.066707,
            0.495055, 0.066707,
            0.525124, 0.066707,
            0.491966, 0.119946,
            0.579274, 0.066707,
            0.443481, 0.993398
    };

    private static final short letterIndices[] = {
            0, 1, 2,
            3, 4, 5,
            6, 7, 8,
            9, 10, 11,
            12, 13, 14,
            15, 16, 17,
            16, 9, 11,
            18, 19, 20,
            20, 21, 3,
            22, 23, 24,
            25, 26, 27,
            28, 29, 30,
            11, 10, 31,
            32, 33, 34,
            35, 36, 37,
            38, 39, 23,
            40, 41, 42,
            43, 44, 45,
            46, 47, 48,
            47, 45, 48,
            46, 48, 49,
            50, 51, 52,
            53, 54, 55,
            56, 57, 58,
            59, 24, 60,
            61, 62, 63,
            64, 65, 66,
            65, 67, 66,
            68, 67, 69,
            70, 69, 71,
            72, 73, 74,
            74, 75, 76,
            75, 77, 78,
            78, 79, 80,
            0, 81, 1,
            3, 21, 4,
            82, 83, 84,
            9, 85, 10,
            86, 87, 88,
            15, 89, 16,
            16, 89, 9,
            18, 90, 19,
            20, 19, 21,
            22, 38, 23,
            25, 91, 26,
            28, 92, 29,
            93, 94, 95,
            96, 97, 98,
            38, 99, 39,
            40, 100, 41,
            43, 101, 44,
            46, 102, 47,
            47, 43, 45,
            103, 104, 105,
            53, 106, 54,
            56, 107, 57,
            59, 22, 24,
            61, 108, 62,
            65, 109, 67,
            68, 66, 67,
            70, 68, 69,
            74, 73, 75,
            75, 73, 77,
            78, 77, 79

    };

    Buffer mVertBuff;
    Buffer mTexCoordBuff;
    Buffer mNormBuff;
    Buffer mIndBuff;


    public Fumetto()
    {
        mVertBuff = fillBuffer(letterVertices);
        mTexCoordBuff = fillBuffer(letterTexcoords);
        mNormBuff = fillBuffer(letterNormals);
        mIndBuff = fillBuffer(letterIndices);
    }
    
    
    @Override
    public Buffer getBuffer(BUFFER_TYPE bufferType)
    {
        Buffer result = null;
        switch (bufferType)
        {
            case BUFFER_TYPE_VERTEX:
                result = mVertBuff;
                break;
            case BUFFER_TYPE_TEXTURE_COORD:
                result = mTexCoordBuff;
                break;
            case BUFFER_TYPE_INDICES:
                result = mIndBuff;
                break;
            case BUFFER_TYPE_NORMALS:
                result = mNormBuff;
            default:
                break;
        }
        return result;
    }
    
    
    @Override
    public int getNumObjectVertex()
    {
        return letterVertices.length / 3;
    }
    
    
    @Override
    public int getNumObjectIndex()
    {
        return letterIndices.length;
    }
}
